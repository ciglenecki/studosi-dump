{
  "title": "[RACANI] 2. laboratorijska vježba - 2021/2022",
  "creator": "theimprobableone",
  "slug": "racani-2-laboratorijska-vjezba-20212022",
  "tags": [
    "FER",
    "Računalna animacija",
    "Laboratorijske vježbe"
  ],
  "posts": {
    "263412": {
      "poster": "theimprobableone",
      "content": "Ima li itko da bi se htio mijenjati za termin labosa? Trenutno imam u ponedjeljak u 11 online, odgovaralo bi mi od srijede nadalje.",
      "votes": {
        "upvoters": [],
        "downvoters": []
      },
      "reactions": {
        "haha": [],
        "wtf": [],
        "tuga": []
      }
    },
    "263673": {
      "poster": "Vrba",
      "content": "jel netko ovo radio ili planira radit u pythonu?",
      "votes": {
        "upvoters": [
          "Carmichael (Charm)",
          "JogaBonito",
          "sheriffHorsey"
        ],
        "downvoters": []
      },
      "reactions": {
        "haha": [],
        "wtf": [],
        "tuga": []
      }
    },
    "264032": {
      "poster": "Carmichael (Charm)",
      "content": "jel netko ima ideju kako ovo rijesit?",
      "votes": {
        "upvoters": [],
        "downvoters": []
      },
      "reactions": {
        "haha": [],
        "wtf": [],
        "tuga": []
      }
    },
    "264069": {
      "poster": "renren",
      "content": "@\"Charm\"#p264032 Mislim da je najlakše implementirat \"Promjene boje i veličine čestice\" iz podpoglavlja 2.4. Znači imaš neki emiter koji generira nove čestice, tj male poligone/krugove (kojim daš neku vrijednost života) i zatim svaku pomjera u određeni smjer, mijenja im boju i umanjuje vrijednost života. Nakon svakog micanja za svaku česticu provjeriš je li vrijednost života ispod nekog praga i ako jest brišeš je iz liste. I valjda je to dovoljno, nemam pojma, na temi od prošle godine su se isto pitali.\n\n@\"Vrba\"#p263673 Jesam ja.\n\nUsput, zna li tko kako učitati teksturu u pythonu? Probala sam na par načina, ali ili nemaju nikakvog efekta ili mi obrišu sve sa zaslona.",
      "votes": {
        "upvoters": [
          "Carmichael (Charm)",
          "Retard00"
        ],
        "downvoters": []
      },
      "reactions": {
        "haha": [],
        "wtf": [],
        "tuga": []
      }
    },
    "264092": {
      "poster": "JoKing",
      "content": "@\"renren\"#p264069 Meni radi ovako kako je objašnjeno na ovom linku: https://codeloop.org/python-modern-opengl-texturing-rectangle/ (u kodu je to između 110 i 122 linije)",
      "votes": {
        "upvoters": [
          "Carmichael (Charm)"
        ],
        "downvoters": []
      },
      "reactions": {
        "haha": [],
        "wtf": [],
        "tuga": []
      }
    },
    "264169": {
      "poster": "sheriffHorsey",
      "content": "Jel ima itko ikakve korisne materijale za ovo? Nisam nista uspio napravit s pripremom",
      "votes": {
        "upvoters": [],
        "downvoters": []
      },
      "reactions": {
        "haha": [],
        "wtf": [],
        "tuga": []
      }
    },
    "264297": {
      "poster": "ygerg11",
      "content": "Je li netko već odgovarao? Šta pitaju?",
      "votes": {
        "upvoters": [],
        "downvoters": []
      },
      "reactions": {
        "haha": [],
        "wtf": [],
        "tuga": []
      }
    },
    "264300": {
      "poster": "theimprobableone",
      "content": "@\"ygerg11\"#p264297 Ja sam imao online, pitala me asistentica da prođem po kodu i objasnim sve dijelove programa. Zatim sto sam implementirao od dodatnih mogucnosti sustava cestica i na kraju jos nesto sitno za tehniku oglasne ploce. Trajalo je cca 5 min.",
      "votes": {
        "upvoters": [
          "boogie_woogie (nika_1999)",
          "ygerg11"
        ],
        "downvoters": []
      },
      "reactions": {
        "haha": [],
        "wtf": [],
        "tuga": []
      }
    },
    "264366": {
      "poster": "login",
      "content": "@\"theimprobableone\"#p264300 Mogu potvrditi sve od kolege. Treba pokazat da program radi, objasnit kaj se tocno napravilo, malo po kodu di je kaj i isto pitanje za billboard, nis specijalno",
      "votes": {
        "upvoters": [
          "theimprobableone",
          "ygerg11"
        ],
        "downvoters": []
      },
      "reactions": {
        "haha": [],
        "wtf": [],
        "tuga": []
      }
    },
    "264850": {
      "poster": "plakytugy",
      "content": "Da li itko zna je li obavezno raditi ovu vježbu ako već imamo prag iz labosa?",
      "votes": {
        "upvoters": [],
        "downvoters": []
      },
      "reactions": {
        "haha": [],
        "wtf": [],
        "tuga": []
      }
    },
    "264865": {
      "poster": "theimprobableone",
      "content": "@\"plakytugy\"#p264850 Ako se ne varam prag je 50% iz svakog labosa. Nek me netko ispravi ako grijesim",
      "votes": {
        "upvoters": [],
        "downvoters": []
      },
      "reactions": {
        "haha": [],
        "wtf": [],
        "tuga": []
      }
    },
    "264869": {
      "poster": "sheriffHorsey",
      "content": "Posto sam se i s ovom vjezbom solidno izjebao da mi proradi odlucio sam napisat neke upute u nadi da ce nekom pomoc. Ukratko cu pojasnit kak sam napravio dio 2.3 i iz dijela 2.4 dio s bojom i velicinom cestice.\n\nKod sam si organizirao u 2 klase i pomocne funkcije.\n\nPrva klasa je Particle klasa. U njoj imate sve sto vam treba za pojedinu tocku: poziciju, brzinu, starost, velicinu cestice, boju i duzinu zivota:\n\n    pozicija = [0.0, -10.0, 0.0]\n    brzina = [0.0, 0.0, 0.0]\n    starost = 0\n    velicina = VELICINA  # ovo sam definirao kao neku konstantu koju sam kasnije stimao\n    boja = [0.0, 0.0, 0.0, 0.0] # prva 3 broja su rgb vrijednosti od 0 do 1, zadnji alpha \n    duzina_zivota = max(1, N(100, 40)) # N oznacava normalnu razdiobu\n\nFunkcije koje su mi trebale su bile: funkcija za povecanje starosti, funkcija za promjenu parametara pojedine cestice i funkcija za promjenu boje. U povecanju starosti se samo inkrementira brojac a preostale dvije glase ovako nekako:\n\n    promijeni_parametre():\n      vektor_pomaka = [N(0, 12), 6, 0]\n      normaliziraj vektor_pomaka\n\n      t = (duzina zivota - starost) / duzina_zivota # na ovaj nacin parametar t je izmedu 0 i 1\n      brzina = vektor_pomaka * KONSTANTA_BRZINE * t**(-0.5) # funkcija t**(-0.5) se moze mijenjat\n      pozicija = pozicija + brzina\n      velicina = t * velicina**2\n      promijeni_boju(t)\n\n    promijeni_boju(t):\n      boja[0] = f_za_crvenu(t)\n      boja[1] = f_za_zelenu(t)\n      boja[2] = f_za_plavu(t)\n      boja[3] = f_za_alpha(t)\n\nFunkcije za boje i alpha sam redom definirao ovako:\n\nza crvenu:  [imath]f(x) = x[/imath]\n\nza zelenu:  [imath]f(x) = -\\big(\\frac{1}{x-2}\\big)^7 [/imath]\n\nza plavu:  [imath] \\: \\: f(x) = (1-x)^2[/imath]\n\nza alfu:   [imath] \\: \\:  \\: \\: f(x) = -(x + 0.5)^{-15} + 1.2 [/imath]\n\nDruga klasa mi je bila Source klasa koja sadrzava samo listu cestica i 3 funkcije: funkciju koja stvara cestice i stavlja ih u listu, funkciju koja svim cesticama inkrementira starost i funkciju koja svim cesticama mijenja parametre i izbacuje cesticama kojima je starost dosegla duzinu zivota.\n\nKonacno, main dio programa se svodi na sljedece:\n\n    napravi prozor i postavi pogled\n    procitaj teksturu\n    napravi Source\n\n    vrti zauvijek:\n      napravi proizvoljan broj novih cestica\n      promijeni parametre i boju svih cestica\n      iscrtaj cestice\n      povecaj starost cesticama\n\n      pricekaj par ms\n\n    \nPreskocio sam funkciju za teksturu:\n\n    w, h = 256, 256\n    image = ucitaj sliku teksture kao intove\n    texture = glGenTextures(1)\n    gluBuild2DMipmaps(GL_TEXTURE_2D, 3, w, h, GL_RGB, GL_UNSIGNED_BYTE, image)    \n    glBlendFunc(GL_SRC_ALPHA,GL_ONE)\n    glEnable(GL_BLEND)\n    glEnable(GL_TEXTURE_2D)\n\nFunkcija za crtanje mi je bila slicna kao i funkcija za crtanje tijela u 1. labosu. Jedna napomena kod te funkcije je da treba primijenit teksturu na sljedeci nacin:\n\n    # ako imamo cesticu p i donji lijevi kut\n    glTexCoord2d(0, 0)\n    glVertex3f(p.pozicija + [-p.velicina, -p.velicina, 0])\n\n    # ako imamo cesticu p i donji desni kut\n    glTexCoord2d(1, 0)\n    glVertex3f(p.pozicija + [ p.velicina, -p.velicina, 0])\n\nitd. za preostala dva kuta i tu istu cesticu. Ako ste sve napravili kao ja trebali biste dobiti simulaciju vatre.\n\nImao sam danas u 4, a asistent mi je bio nuic. Prvo sam pokrenuo kod i ukratko objasnio koji dio koda radi sto. Pitao me da promijenim boju cestica u zelenu, sto bi sve morao dodati ako zelim imati iz rotirajuce stapove koji na svojim rubovima imaju te cestice, a izvor se jos dodatno pomice i zasto mi cestice trzaju lijevo ili desno kako stare.",
      "votes": {
        "upvoters": [
          "Daorson",
          "MOXY",
          "Zk6dO73 (burw0r)",
          "gladiator",
          "login",
          "n_p_zagi (nicrosc)"
        ],
        "downvoters": []
      },
      "reactions": {
        "haha": [],
        "wtf": [],
        "tuga": []
      }
    }
  }
}