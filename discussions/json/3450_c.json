{
  "title": "C++",
  "creator": "iLabaviUmeDaZabavi (prvi do boga)",
  "slug": "c",
  "tags": [
    "Opušteno"
  ],
  "posts": {
    "158335": {
      "poster": "iLabaviUmeDaZabavi (prvi do boga)",
      "content": "Thread za sve rasprave vezane uz C++",
      "votes": {
        "upvoters": [
          "[deleted]",
          "[deleted]"
        ],
        "downvoters": []
      },
      "reactions": {
        "haha": [
          "AVRFreak",
          "KitKat (H(x))",
          "Svarog (Veles)",
          "markoo321 (Grinch)",
          "spampers (majmunska boginja)"
        ],
        "wtf": [],
        "tuga": []
      }
    },
    "158341": {
      "poster": "InCogNiTo124",
      "content": "http://harmful.cat-v.org/software/c++/linus",
      "votes": {
        "upvoters": [
          "[deleted]",
          "[deleted]"
        ],
        "downvoters": []
      },
      "reactions": {
        "haha": [],
        "wtf": [],
        "tuga": []
      }
    },
    "158342": {
      "poster": "gladiator",
      "content": "jel bolji od C-a?",
      "votes": {
        "upvoters": [],
        "downvoters": []
      },
      "reactions": {
        "haha": [],
        "wtf": [],
        "tuga": []
      }
    },
    "158344": {
      "poster": "micho (M̵̧̩͑̀͝î̶͍̉ć̴̝̾́̀o̶̺̟̣͂̽)",
      "content": "@gladiator#158342 god no",
      "votes": {
        "upvoters": [
          "AVRFreak"
        ],
        "downvoters": []
      },
      "reactions": {
        "haha": [],
        "wtf": [],
        "tuga": [
          "gladiator"
        ]
      }
    },
    "158346": {
      "poster": "iLabaviUmeDaZabavi (prvi do boga)",
      "content": "@InCogNiTo124#158341 \n\n“Linus is a monkey nigger”\n\n-Terry A. Davis",
      "votes": {
        "upvoters": [
          "Lyras",
          "Svarog (Veles)",
          "Zk6dO73 (burw0r)",
          "[deleted]",
          "[deleted]",
          "[deleted]",
          "kix7 (Fish99)"
        ],
        "downvoters": []
      },
      "reactions": {
        "haha": [
          "Fran_- (random_trooper)",
          "InCogNiTo124",
          "Lyras",
          "McKovalski",
          "Sashat_Triceps (Sasha_Triceps)",
          "Svarog (Veles)",
          "__builtin_popcount (std::popcount)",
          "slip",
          "turunturu (Cement)",
          "wutangfan (HugoStiglitz)"
        ],
        "wtf": [],
        "tuga": []
      }
    },
    "158348": {
      "poster": "BreadCat",
      "content": "ovaj thread\n\n![](assets/2021-03-25/00021.png)",
      "votes": {
        "upvoters": [
          "Dome",
          "Emma63194",
          "InCogNiTo124",
          "JayOhAit",
          "KitKat (H(x))",
          "Murin",
          "NekocBraca",
          "Svarog (Veles)",
          "[deleted]",
          "brbrbr",
          "in1",
          "kix7 (Fish99)",
          "spampers (majmunska boginja)"
        ],
        "downvoters": []
      },
      "reactions": {
        "haha": [
          "Amon",
          "BrownPerson (Bambi)",
          "Emma63194",
          "Fran_- (random_trooper)",
          "G-bear",
          "Grumio",
          "KitKat (H(x))",
          "Lyras",
          "McKovalski",
          "NekocBraca",
          "RS7",
          "Sans",
          "Svarog (Veles)",
          "__builtin_popcount (std::popcount)",
          "brbrbr",
          "markoo321 (Grinch)",
          "spampers (majmunska boginja)",
          "turunturu (Cement)"
        ],
        "wtf": [],
        "tuga": [
          "Dome"
        ]
      }
    },
    "158385": {
      "poster": "[deleted]",
      "content": "@gladiator#158342 ne\n\nC je elegantan i lijep. C++ je abominacija",
      "votes": {
        "upvoters": [
          "AVRFreak",
          "Gussy (huba buba)",
          "HotPotato",
          "[deleted]",
          "[deleted]"
        ],
        "downvoters": []
      },
      "reactions": {
        "haha": [],
        "wtf": [],
        "tuga": [
          "gladiator"
        ]
      }
    },
    "158390": {
      "poster": "Svarog (Veles)",
      "content": "> @Psychosis#158385 C je elegantan i lijep\n\n\n\\> postoji sintaksa funkcijskih pokazivača\n\n???",
      "votes": {
        "upvoters": [
          "Amali (Amajli)",
          "InCogNiTo124"
        ],
        "downvoters": []
      },
      "reactions": {
        "haha": [],
        "wtf": [],
        "tuga": []
      }
    },
    "158392": {
      "poster": "gladiator",
      "content": "Istina, ne koristim pokazivače. Kako si znao?",
      "votes": {
        "upvoters": [
          "kix7 (Fish99)"
        ],
        "downvoters": []
      },
      "reactions": {
        "haha": [],
        "wtf": [],
        "tuga": []
      }
    },
    "158398": {
      "poster": "iLabaviUmeDaZabavi (prvi do boga)",
      "content": "> @Psychosis#158385 C je elegantan i lijep\n\n![](assets/2021-03-25/00024.png)",
      "votes": {
        "upvoters": [],
        "downvoters": []
      },
      "reactions": {
        "haha": [
          "Amali (Amajli)",
          "Amon",
          "Fran_- (random_trooper)",
          "KitKat (H(x))",
          "McKovalski",
          "Murin",
          "NekocBraca",
          "Stimmar",
          "in1",
          "kix7 (Fish99)",
          "turunturu (Cement)"
        ],
        "wtf": [],
        "tuga": []
      }
    },
    "158399": {
      "poster": "micho (M̵̧̩͑̀͝î̶͍̉ć̴̝̾́̀o̶̺̟̣͂̽)",
      "content": "@iLabaviUmeDaZabavi#158398 možda da ga koriste neautisti bi se bacio i neki typedef :)",
      "votes": {
        "upvoters": [],
        "downvoters": []
      },
      "reactions": {
        "haha": [],
        "wtf": [],
        "tuga": []
      }
    },
    "158400": {
      "poster": "[deleted]",
      "content": "@iLabaviUmeDaZabavi#158398 \n\nU čemu je problem s ovim?\n\nJako čitljivo i eksplicitno znaš o čemu se radi iz priloženog",
      "votes": {
        "upvoters": [
          "Gussy (huba buba)",
          "[deleted]",
          "gladiator",
          "in1"
        ],
        "downvoters": []
      },
      "reactions": {
        "haha": [],
        "wtf": [],
        "tuga": []
      }
    },
    "158503": {
      "poster": "[deleted]",
      "content": "koja verzija cppa se koristi u embedded dev svijetu",
      "votes": {
        "upvoters": [],
        "downvoters": []
      },
      "reactions": {
        "haha": [
          "AVRFreak",
          "micho (M̵̧̩͑̀͝î̶͍̉ć̴̝̾́̀o̶̺̟̣͂̽)"
        ],
        "wtf": [],
        "tuga": []
      }
    },
    "158517": {
      "poster": "[deleted]",
      "content": "@ElitePer#158503 Koristi se u pravilu C. \n\nA ako se koristi C++, onda se koristi ona verzija koju kompajler za tu platformu podrzava. \n\nTipa, za aarch64 (to je arm64, android uredaju i sl) imas linarove verzije gcca i g++a koji podrzavaju C++17 (za C++20 nisam siguran kakvo je opcenito stanje).",
      "votes": {
        "upvoters": [
          "[deleted]"
        ],
        "downvoters": []
      },
      "reactions": {
        "haha": [],
        "wtf": [],
        "tuga": []
      }
    },
    "158521": {
      "poster": "InCogNiTo124",
      "content": "Jel istina to da ce rust zamjenit c++",
      "votes": {
        "upvoters": [
          "[deleted]",
          "kix7 (Fish99)"
        ],
        "downvoters": []
      },
      "reactions": {
        "haha": [
          "NekocBraca",
          "Svarog (Veles)",
          "iLabaviUmeDaZabavi (prvi do boga)",
          "micho (M̵̧̩͑̀͝î̶͍̉ć̴̝̾́̀o̶̺̟̣͂̽)"
        ],
        "wtf": [],
        "tuga": []
      }
    },
    "158522": {
      "poster": "jadzia-dax (Jadzia Dax)",
      "content": "@iLabaviUmeDaZabavi#158398 https://cdecl.org\n\ndeclare f as array of pointer to function returning pointer to function returning void\n\ngdje je problem?",
      "votes": {
        "upvoters": [
          "Amali (Amajli)",
          "InCogNiTo124",
          "[deleted]",
          "__builtin_popcount (std::popcount)",
          "iLabaviUmeDaZabavi (prvi do boga)",
          "micho (M̵̧̩͑̀͝î̶͍̉ć̴̝̾́̀o̶̺̟̣͂̽)"
        ],
        "downvoters": []
      },
      "reactions": {
        "haha": [],
        "wtf": [],
        "tuga": []
      }
    },
    "158536": {
      "poster": "jadzia-dax (Jadzia Dax)",
      "content": "kad ti majka kaze da trebas pronaci nove prijatelje\n\nhttps://www.youtube.com/watch?v=POa_V15je8Y",
      "votes": {
        "upvoters": [],
        "downvoters": []
      },
      "reactions": {
        "haha": [
          "InCogNiTo124",
          "KitKat (H(x))",
          "Stimmar",
          "slip",
          "turunturu (Cement)"
        ],
        "wtf": [],
        "tuga": []
      }
    },
    "158551": {
      "poster": "[deleted]",
      "content": "![](assets/2021-03-25/00040.png)",
      "votes": {
        "upvoters": [
          "[deleted]",
          "[deleted]"
        ],
        "downvoters": []
      },
      "reactions": {
        "haha": [
          "AVRFreak",
          "BreadCat",
          "BrkMateaBeusana (Umarell)",
          "Gussy (huba buba)",
          "McKovalski",
          "Stimmar",
          "Svarog (Veles)",
          "in1",
          "kix7 (Fish99)",
          "micho (M̵̧̩͑̀͝î̶͍̉ć̴̝̾́̀o̶̺̟̣͂̽)"
        ],
        "wtf": [],
        "tuga": []
      }
    },
    "158558": {
      "poster": "[deleted]",
      "content": "@ElitePer#158551 doing the lord's work  🙏\n\nja isto odmah lupim dislajk i ugasim, vjerujem da je i zolja jedan od dislajkera 🙏\n\nedit: cudi me da jos uvijek nisu ugasili komentare",
      "votes": {
        "upvoters": [],
        "downvoters": []
      },
      "reactions": {
        "haha": [],
        "wtf": [],
        "tuga": []
      }
    },
    "158625": {
      "poster": "Gussy (huba buba)",
      "content": "@ElitePer#158551 \n\n![](assets/2021-03-25/00049.png)",
      "votes": {
        "upvoters": [],
        "downvoters": []
      },
      "reactions": {
        "haha": [
          "Amali (Amajli)",
          "Murin"
        ],
        "wtf": [],
        "tuga": []
      }
    },
    "158849": {
      "poster": "Mariox",
      "content": "![](assets/2021-03-26/00001.png)",
      "votes": {
        "upvoters": [
          "AVRFreak"
        ],
        "downvoters": []
      },
      "reactions": {
        "haha": [
          "Amali (Amajli)",
          "Amon",
          "Emma63194",
          "InCogNiTo124",
          "KitKat (H(x))",
          "Koalefant",
          "Mikki",
          "Svarog (Veles)",
          "Uchenikowitz (Učečuču)",
          "__builtin_popcount (std::popcount)",
          "iLabaviUmeDaZabavi (prvi do boga)",
          "menace_master",
          "miss_anthropocene (neunist.iva)",
          "spejs",
          "wutangfan (HugoStiglitz)"
        ],
        "wtf": [],
        "tuga": []
      }
    },
    "158863": {
      "poster": "__builtin_popcount (std::popcount)",
      "content": "@Mariox#158849\n\nMoglo bi se optimirati binarnim pretraživanjem da ne piše `//Please don't modify it`.",
      "votes": {
        "upvoters": [],
        "downvoters": []
      },
      "reactions": {
        "haha": [
          "BrownPerson (Bambi)",
          "InCogNiTo124",
          "KitKat (H(x))",
          "Koalefant",
          "Svarog (Veles)",
          "iLabaviUmeDaZabavi (prvi do boga)",
          "miss_anthropocene (neunist.iva)"
        ],
        "wtf": [],
        "tuga": []
      }
    },
    "158959": {
      "poster": "__builtin_popcount (std::popcount)",
      "content": "@Mariox#158849 \n\n![](assets/2021-03-26/00009.png)\n\n**IS THIS SOME KIND OF SICK JOKE?!**\n\nhttps://godbolt.org/z/oj49Er4bY",
      "votes": {
        "upvoters": [
          "AVRFreak",
          "Amali (Amajli)",
          "Hrvoje (Hrvoje45)",
          "Lyras",
          "Mikki",
          "PeroPerica",
          "Stimmar",
          "Svarog (Veles)",
          "[deleted]"
        ],
        "downvoters": []
      },
      "reactions": {
        "haha": [
          "Amali (Amajli)",
          "BrownPerson (Bambi)",
          "Hrvoje (Hrvoje45)"
        ],
        "wtf": [],
        "tuga": []
      }
    },
    "158961": {
      "poster": "[deleted]",
      "content": "@__builtin_popcount#158959 I pazi do ide sve najranije gcca sto ga tu imaju (4.1.2). I na O1",
      "votes": {
        "upvoters": [],
        "downvoters": []
      },
      "reactions": {
        "haha": [],
        "wtf": [
          "__builtin_popcount (std::popcount)"
        ],
        "tuga": []
      }
    },
    "158962": {
      "poster": "InCogNiTo124",
      "content": "@__builtin_popcount#158959 pa gcc u biti ima dost napredne optimizacije",
      "votes": {
        "upvoters": [
          "Amali (Amajli)",
          "[deleted]"
        ],
        "downvoters": []
      },
      "reactions": {
        "haha": [],
        "wtf": [],
        "tuga": []
      }
    },
    "158963": {
      "poster": "Lyras",
      "content": "I sad zamisli ljude koji u godini gospodnjoj 2021. pišu muh assembly code jer je \"brže kad oni napišu\". Je kurac lmao.",
      "votes": {
        "upvoters": [],
        "downvoters": [
          "AVRFreak"
        ]
      },
      "reactions": {
        "haha": [],
        "wtf": [],
        "tuga": [
          "micho (M̵̧̩͑̀͝î̶͍̉ć̴̝̾́̀o̶̺̟̣͂̽)"
        ]
      }
    },
    "158966": {
      "poster": "iLabaviUmeDaZabavi (prvi do boga)",
      "content": "@Lyras#158963 Ovo je trivijalan primjer, vec SIMD instrukcije ne optimizira uvijek kako treba.",
      "votes": {
        "upvoters": [
          "AVRFreak",
          "Amali (Amajli)",
          "Lyras",
          "[deleted]",
          "__builtin_popcount (std::popcount)"
        ],
        "downvoters": []
      },
      "reactions": {
        "haha": [],
        "wtf": [],
        "tuga": [
          "Lyras"
        ]
      }
    },
    "158969": {
      "poster": "[deleted]",
      "content": "https://www.youtube.com/watch?v=bSkpMdDe4g4",
      "votes": {
        "upvoters": [],
        "downvoters": []
      },
      "reactions": {
        "haha": [],
        "wtf": [],
        "tuga": []
      }
    },
    "158975": {
      "poster": "Mariox",
      "content": "@__builtin_popcount#158959 \n\ngcc je brutalan",
      "votes": {
        "upvoters": [
          "InCogNiTo124"
        ],
        "downvoters": []
      },
      "reactions": {
        "haha": [],
        "wtf": [],
        "tuga": []
      }
    },
    "158981": {
      "poster": "[deleted]",
      "content": "odi na c# i nemas vise problema s c++\n\nqed",
      "votes": {
        "upvoters": [],
        "downvoters": []
      },
      "reactions": {
        "haha": [
          "AVRFreak",
          "Amali (Amajli)",
          "turunturu (Cement)"
        ],
        "wtf": [],
        "tuga": []
      }
    },
    "159016": {
      "poster": "InCogNiTo124",
      "content": "@Smoet#158981 ja fundamentalno ne mogu kodirati u C#\n\nnaime nosim naocale",
      "votes": {
        "upvoters": [],
        "downvoters": []
      },
      "reactions": {
        "haha": [
          "Amali (Amajli)",
          "Amon",
          "Bog (Charlie Brown)",
          "BrownPerson (Bambi)",
          "Hrvoje (Hrvoje45)",
          "NekocBraca",
          "gladiator",
          "turunturu (Cement)"
        ],
        "wtf": [],
        "tuga": []
      }
    },
    "159024": {
      "poster": "[deleted]",
      "content": "@InCogNiTo124#159016 mozda ste samo tupi kolega",
      "votes": {
        "upvoters": [],
        "downvoters": []
      },
      "reactions": {
        "haha": [],
        "wtf": [],
        "tuga": []
      }
    },
    "159027": {
      "poster": "gladiator",
      "content": "Kakvo je stanje na tržištu u 2021. godini za razvoj aplikacija u HolyC-u?",
      "votes": {
        "upvoters": [
          "[deleted]"
        ],
        "downvoters": []
      },
      "reactions": {
        "haha": [],
        "wtf": [],
        "tuga": []
      }
    },
    "160481": {
      "poster": "Lovren97",
      "content": "Pozz ekipa, novi sam u C++ i za jedan predmet moramo implementirati Decision Tree u C++, a imamo pojedina memorijska ograničenja i jednostavno nisam siguran kako više da optimiziram išta u kodu. Kako u Decision Treeu možeš paralelizirati stvari, koristim std::async za paralelizirano stvaranje čvorova u stablu. No, nisam siguran jesam li to kako treba optimizirao, pa ako može itko pomoći, puno bi mi pomoglo.    \n\n ```cpp\nconst Node DecisionTree::buildTree(const Data& rows, const MetaData& meta) {\n    auto split = Calculations::find_best_split(rows,meta);\n    double gain = std::get<0>(split);\n    const Question& question = std::get<1>(split);\n\n    if (gain == 0) {\n        return Node(Leaf(Calculations::classCounts(rows)));\n    } else {\n        auto partitions = Calculations::partition(rows, question);\n\n        const Data& true_branch = std::get<0>(partitions);\n        const Data& false_branch = std::get<1>(partitions);\n\n        std::future<const Node> future1 = std::async(&DecisionTree::buildTree, this, true_branch, meta);\n        std::future<const Node> future2 = std::async(&DecisionTree::buildTree, this, false_branch, meta);\n\n        Node left_node = future1.get();\n        Node right_node = future2.get();\n\n        return Node(left_node, right_node, question);\n    }\n}\n```\n\nOvo je znaci ta glavna metoda buildTree, gdje zapravo u svakom Nodeu presječem dataset na pola ovisno o tome koja je vrijednost najbolja.",
      "votes": {
        "upvoters": [],
        "downvoters": []
      },
      "reactions": {
        "haha": [
          "janeromero (Serial Number Q5U4EX7YY2E9N)"
        ],
        "wtf": [],
        "tuga": [
          "markoo321 (Grinch)"
        ]
      }
    },
    "160498": {
      "poster": "[deleted]",
      "content": "@Lovren97#160481\n\nBudući da si rekao da imate \"pojedina memorijska ograničenja,\" trebaš prvenstveno paziti na to. **Savjet: ako ne trebate raditi paralelizacije za labos onda ih nemoj raditi.** Ostavi si to za nekad kada ćeš imati vremena, npr. ljeto. Paralelizacije ti baš ne utječu na memorijsku efikasnost, nego više na komputacijsko vrijeme (u pravilu).\n\nNaravno, sada što si napisao, napisao si. Nemoj dirat.\n\n```\nconst auto DecisionTree::buildTree(const Data& rows, const MetaData& meta) {\n    const auto split{ Calculations::find_best_split(rows,meta) };   \n    const double gain{ std::get<0>(split) };\n    const Question& question{ std::get<1>(split) };\n\n    // Ovaj gain je double sudeći po tvom kodu. Ja bi osobno izbjegavao\n    // float i double usporedbe. Pročitaj si ovo za uvod: http://wiki.xfer.hr/art_epsilon/\n    // Probaj maknuti tu float usporedbu.\n    if (gain == 0.0) {\n        return Node{ Leaf{ Calculations::classCounts(rows) } };\n    }\n\n     // Ne treba ti else jer imaš return u if-u :)\n    const auto partitions{ Calculations::partition(rows, question) };\n\n    const Data& true_branch{ std::get<0>(partitions) };\n    const Data& false_branch{ std::get<1>(partitions) };\n\n    // Iskreno, nemam baš iskustva s async-om i future-ima pa ti neću dirat ovo previše.\n    std::future<const Node> future1{ std::async(&DecisionTree::buildTree, this, true_branch, meta) };\n    std::future<const Node> future2{ std::async(&DecisionTree::buildTree, this, false_branch, meta) };\n\n    // Primjeti kako \"spammam\" const :)\n    const Node left_node{ future1.get() };\n    const Node right_node{ future2.get() };\n\n    return Node{left_node, right_node, question};\n}\n```\n\nPrimjeti kako je sve const . Pogledaj si const correctness - https://isocpp.org/wiki/faq/const-correctness i http://isocpp.github.io/CppCoreGuidelines/CppCoreGuidelines#S-const. Isto tako pogledaj si AAA (almost always auto) - https://herbsutter.com/2013/08/12/gotw-94-solution-aaa-style-almost-always-auto/ . Isto tako, pogledaj si inicijalizaciju s _braces_ zagradma ({}). \n\nObrati posebno pažnju na _const always right_ i na https://isocpp.org/wiki/faq/const-correctness#const-ptr-vs-ptr-const.\n\nSve ovo što sam napisao će ti pomoći da pišeš bolji kod, odnosno da te compiler upozori na to kada pišeš bedastoće. To je dobro :).\n\nP.S. Dosta dobar kod s obzirom da si rekao da si \"novi u C++-u.\" Bravo.",
      "votes": {
        "upvoters": [
          "Lovren97",
          "Stimmar",
          "Svarog (Veles)",
          "Zogen",
          "[deleted]",
          "jadzia-dax (Jadzia Dax)",
          "micho (M̵̧̩͑̀͝î̶͍̉ć̴̝̾́̀o̶̺̟̣͂̽)",
          "turunturu (Cement)"
        ],
        "downvoters": []
      },
      "reactions": {
        "haha": [],
        "wtf": [],
        "tuga": []
      }
    },
    "160502": {
      "poster": "Lovren97",
      "content": "@tolecnal#160498 puno ti hvala na pomoći! :) \n\nnažalost moram tu paralelizaciju jer nas ocjenjuju po brzini izvođenja a ova paralelizacija mi sa 50 min smanji na 10 min izvođenje. No, ocjenjuju naše projekte na tim nekim svojim serverima a tamo nam je memorijsko ogranicenje 2GB, i sa ovom paralelizacijom mi taman prođe preko toga, jer prepostavljam da mi se stvara hrpa nepotrebnog kad koristim ove async funkcije :$",
      "votes": {
        "upvoters": [
          "[deleted]"
        ],
        "downvoters": []
      },
      "reactions": {
        "haha": [
          "janeromero (Serial Number Q5U4EX7YY2E9N)"
        ],
        "wtf": [],
        "tuga": []
      }
    },
    "160504": {
      "poster": "[deleted]",
      "content": "@Lovren97#160502 Govorim na pamet sada, ali ne znam kako točno gradiš Decision Tree. Pretpostavljam da je offline - učitaš cijeli dataset u program i onda izgradiš stablo odluke. Pretpostavljam da oni računaju i memorijsko zauzeće od dataset-a, a ti ako kopiraš dataset u svoje Node-ove onda imaš duplo zauzeće memorije. Probaj imati samo pokazivače unutar Node-ova na već postojeće podatke dataset-a.",
      "votes": {
        "upvoters": [
          "Lovren97"
        ],
        "downvoters": []
      },
      "reactions": {
        "haha": [],
        "wtf": [],
        "tuga": []
      }
    },
    "160522": {
      "poster": "jadzia-dax (Jadzia Dax)",
      "content": "@tolecnal#160498 @Lovren97  ja se ubacujem s dodatnim komentarom\n\nako se nesto iz funkcije vraca by value, neka ne bude `const`, u vecini slucajeva to zavrsi tako da radis uzaludne kopije\n\n-----\n\n`std::async` je malo divlji zbog svog defaultnog execution policya koji je `async|deffered` i ne garantira bas da ce se izvrsiti na posebnom threadu, GCC je prije samo defferao execution do poziva na `.get()`, ocigledno to kod tebe nije slucaj jer ti stvarno smanji execution time, ali specificirati mu launch policy -> `std::async(std::launch::async, &DecisionTree::buildTree, this, true_branch, meta);` generalno nije losa ideja\n\ndodatno, s obzirom da tvoj main thread nista ne radi, nego ceka oba futurea da se vrate, vjerojatno ti ne trebaju zasebni threadovi za oba brancha\n\nevo moj take:\n```\nauto DecisionTree::buildTree(const Data& rows, const MetaData& meta) {\n    const auto split{ Calculations::find_best_split(rows,meta) };   \n    const double gain{ std::get<0>(split) };\n    const Question& question{ std::get<1>(split) };\n\n    if (gain == 0.0) {\n        return Node{ Leaf{ Calculations::classCounts(rows) } };\n    }\n\n    const auto partitions{ Calculations::partition(rows, question) };\n\n    const Data& true_branch{ std::get<0>(partitions) };\n    const Data& false_branch{ std::get<1>(partitions) };\n\n    std::future<Node> future1{ std::async(std::launch::async, &DecisionTree::buildTree, this, true_branch, meta) };\n    Node right_node = buildTree(this, false_branch, meta);\n    Node left_node { future1.get() };\n\n    return Node{ std::move(left_node), std::move(right_node), question };\n}\n```\n\nadditionally, vjerojatno si ovaj blok\n```\n    const auto split{ Calculations::find_best_split(rows,meta) };   \n    const double gain{ std::get<0>(split) };\n    const Question& question{ std::get<1>(split) };\n ```\n \n mozes pocistiti sa structured bindingom, https://en.cppreference.com/w/cpp/language/structured_binding\n \n ```\n auto const& [gain, question] = Calculations::find_best_split(rows, meta);\n ```",
      "votes": {
        "upvoters": [
          "InCogNiTo124",
          "Stimmar",
          "[deleted]",
          "[deleted]",
          "iLabaviUmeDaZabavi (prvi do boga)",
          "micho (M̵̧̩͑̀͝î̶͍̉ć̴̝̾́̀o̶̺̟̣͂̽)"
        ],
        "downvoters": []
      },
      "reactions": {
        "haha": [],
        "wtf": [],
        "tuga": []
      }
    },
    "160532": {
      "poster": "aperture",
      "content": "@Lovren97#160481 Ok, možemo li još jednom na kratko proći kroz algoritam jer pisanje const točnog i idiomatskog C++ koda i nema previše smisla ako to što paraleliziraš nema smisla.\n\nZa početak, kolika ti je dubina stabla, ti ovdje stvaraš 2^n dretvi. Jednom kad napraviš oversubscribe na CPU, stvari u pravilu idu nizvodno... Možda je potrebno preformulirati algoritam ako ga želiš efikasno paralelizirati (recimo ne raditi novu dretvu ako ti je već svaki CPU socket pun). Možeš li prokomentirati kako radiš partition nad podacima?\n\nIsto tako, probaj provući svoj program kroz profiler i potvrditi hiptezu da je problem tamo gdje misliš da je problem. Programeri su jako dobri u optimiziranju totalno krivih stvari.",
      "votes": {
        "upvoters": [
          "NekocBraca",
          "Stimmar",
          "[deleted]",
          "[deleted]",
          "ataxia",
          "iLabaviUmeDaZabavi (prvi do boga)",
          "jadzia-dax (Jadzia Dax)"
        ],
        "downvoters": []
      },
      "reactions": {
        "haha": [],
        "wtf": [],
        "tuga": []
      }
    },
    "160535": {
      "poster": "jadzia-dax (Jadzia Dax)",
      "content": "> @aperture#160532 Za početak, kolika ti je dubina stabla, ti ovdje stvaraš 2n dretvi\n\ne imala sam ovaj concern, ali nemam pojma o descision treejevima pa nisam htjela ulaziti u to\n\nda, idealno bi to thread-poolao ili nastavio dalje bez threadova ako predes `std::thread::hardware_concurrency() * 2`",
      "votes": {
        "upvoters": [
          "InCogNiTo124",
          "[deleted]"
        ],
        "downvoters": []
      },
      "reactions": {
        "haha": [],
        "wtf": [],
        "tuga": []
      }
    },
    "160540": {
      "poster": "micho (M̵̧̩͑̀͝î̶͍̉ć̴̝̾́̀o̶̺̟̣͂̽)",
      "content": "@jadzia-dax#160535 zašto puta 2?\n\nHardware concurrency broji i threadove, a neki procovi nemaju ni hyperthreading, dok neki imaju i quad SMT",
      "votes": {
        "upvoters": [],
        "downvoters": []
      },
      "reactions": {
        "haha": [],
        "wtf": [],
        "tuga": []
      }
    },
    "160564": {
      "poster": "Lovren97",
      "content": "@aperture#160532 Zadatak je da gradimo neprunano stablo, odnosno ovisi o datasetu koliko ce biti duboko. Partition ti radim znaci ovako: \n\n```cpp\ntuple<Data, Data> Calculations::partition(const Data& data, const Question& q) {\n  Data true_rows;\n  Data false_rows;\n  \n  for (const auto &row: data) {\n    if (q.solve(row))\n      true_rows.push_back(row);\n    else\n      false_rows.push_back(row);\n  }\n\n  return forward_as_tuple(true_rows, false_rows);\n}\n```\n\nznaci doslovno stvorim da dijela dataseta, ovisno o ovom questionu, a to je zapravo sam object sa vrijednosti nekom i onda gledam dal je neka vrijednost u datasetu veca ili manja od tog. \n\nSa svojim nekim slabim znanjem C++ ja sam sumnjao da je mozda problem sto predajem te velike particije u svaki taj async poziv i onda mi se s tim stvori toliki memory.",
      "votes": {
        "upvoters": [],
        "downvoters": []
      },
      "reactions": {
        "haha": [
          "janeromero (Serial Number Q5U4EX7YY2E9N)"
        ],
        "wtf": [],
        "tuga": []
      }
    },
    "160579": {
      "poster": "aperture",
      "content": "@Lovren97#160564 E vidiš, tu je problem... Ono što si u ovoj funkciji napravio je efektivno kopija cijelog dataseta i to tako radiš n puta gdje je n dubina stabla. Brzi popravak koji možeš napraviti na kraju ove funkcije je data.clear() koja će isprazniti početni vektor. Ovo nije baš sretno ali barem imaš puno veću šansu zadovoljiti memorijska ograničenja ispred sebe.\n\nBrza napomena, ovdje se još može igrati s move semantikom tako da ne zoveš copy constructor na svaki push_back već da zoveš move constructor, ali otom potom. Probaj profilirati i vidjeti hoće li ovo raditi ok pa onda možemo gledati dalje",
      "votes": {
        "upvoters": [
          "InCogNiTo124",
          "[deleted]"
        ],
        "downvoters": []
      },
      "reactions": {
        "haha": [],
        "wtf": [],
        "tuga": []
      }
    },
    "160584": {
      "poster": "Lovren97",
      "content": "@aperture#160579 E ali ovu funkciju nisam ja napisao, ovo su nam oni dali već. Tako da onda ne mogu clear napraviti, jer je data const.",
      "votes": {
        "upvoters": [
          "Svarog (Veles)",
          "[deleted]",
          "aperture",
          "micho (M̵̧̩͑̀͝î̶͍̉ć̴̝̾́̀o̶̺̟̣͂̽)"
        ],
        "downvoters": []
      },
      "reactions": {
        "haha": [
          "janeromero (Serial Number Q5U4EX7YY2E9N)"
        ],
        "wtf": [],
        "tuga": [
          "aperture"
        ]
      }
    },
    "160587": {
      "poster": "Lovren97",
      "content": "Jel se može ovako clearati memorija? \n\n`Data &current = const_cast<Data &>(rows);\n\n  Data().swap(current);`",
      "votes": {
        "upvoters": [],
        "downvoters": []
      },
      "reactions": {
        "haha": [
          "janeromero (Serial Number Q5U4EX7YY2E9N)"
        ],
        "wtf": [],
        "tuga": []
      }
    },
    "160592": {
      "poster": "micho (M̵̧̩͑̀͝î̶͍̉ć̴̝̾́̀o̶̺̟̣͂̽)",
      "content": "@Lovren97#160587 hmmm ako se ne varam mijenjanje inicijalno const varijable uvodi nedefinirano ponašanje\n\nal to ne znači da neće raditi ako je original ne-const, tako da probaj.",
      "votes": {
        "upvoters": [],
        "downvoters": []
      },
      "reactions": {
        "haha": [],
        "wtf": [],
        "tuga": []
      }
    },
    "160602": {
      "poster": "HeHe (Direktor života)",
      "content": "Vama fali zolja",
      "votes": {
        "upvoters": [
          "InCogNiTo124",
          "[deleted]"
        ],
        "downvoters": []
      },
      "reactions": {
        "haha": [],
        "wtf": [],
        "tuga": [
          "InCogNiTo124",
          "Stimmar",
          "turunturu (Cement)"
        ]
      }
    },
    "160608": {
      "poster": "aperture",
      "content": "@Lovren97#160587 Mea culpa, pretpostavio sam da si sam pisao partition tako možeš sam i maknuti taj const. Blesavo pitanje, ali koji dio ovoga nisi sam pisao i što sve možeš mijenjati?\n\nRecimo ako nemaš zadan API za buildTree onda tamo možeš napraviti rows.clear() nakon što si pozvao stvaranje particija(pod pretpostavkom da makneš const)? @micho je ovdje u pravu, mijenjanje const objekta tako da makneš const uvodi nedefinirano ponašanje.",
      "votes": {
        "upvoters": [],
        "downvoters": []
      },
      "reactions": {
        "haha": [],
        "wtf": [],
        "tuga": []
      }
    },
    "160714": {
      "poster": "Lovren97",
      "content": "@aperture#160608 većina tog je već definirano i na meni je sam bilo implementirati te funkcije. Mislim da je glavi problem to što mi se previše dretvi stvori, jer recimo na mom vlastitom laptopu mi memorijsko ograničenje nikad nije više od 1.7GB, a na njihovim serverima mi se process killa čim pređe 2GB. Prepostavljam da njihovim serverima ima više jezgri i samim time se više memorije zauzme.",
      "votes": {
        "upvoters": [],
        "downvoters": []
      },
      "reactions": {
        "haha": [
          "janeromero (Serial Number Q5U4EX7YY2E9N)"
        ],
        "wtf": [],
        "tuga": []
      }
    },
    "160749": {
      "poster": "[deleted]",
      "content": "@Lovren97#160714 Da probaš potvrditi teoriju, napravi ovo što je @jadzia-dax i onda vrti i mjeri zauzeće memorije kod sebe (to će ga prisiliti da uvijek stvara novu dretvu).\n\n> @jadzia-dax#160522 std::async je malo divlji zbog svog defaultnog execution policya koji je async|deffered i ne garantira bas da ce se izvrsiti na posebnom threadu, GCC je prije samo defferao execution do poziva na .get(), ocigledno to kod tebe nije slucaj jer ti stvarno smanji execution time, ali specificirati mu launch policy -> std::async(std::launch::async, &DecisionTree::buildTree, this, true_branch, meta); generalno nije losa ideja\n\nNo meni je svejedno to malo sumnjivo, jer nije baš da samo postojanje dretvi može imati toliki memorijski otisak. Ako je do dretvi, onda vjerojatno negdje imaš nepotrebno kopiranje podataka za njih posebno.",
      "votes": {
        "upvoters": [],
        "downvoters": []
      },
      "reactions": {
        "haha": [],
        "wtf": [],
        "tuga": []
      }
    },
    "160965": {
      "poster": "jadzia-dax (Jadzia Dax)",
      "content": "@micho#160540 hm, da, u pravu si, zabrijala sam da je to broj coreova\n\n@Delpins#160749 ja sam isto na tvojoj strani sumljivosti, nema sanse da threadovi sami po sebi dignu usage, eventualno ako imas neke opskurne kolicine podataka u thread local storageu, ali??",
      "votes": {
        "upvoters": [
          "[deleted]",
          "micho (M̵̧̩͑̀͝î̶͍̉ć̴̝̾́̀o̶̺̟̣͂̽)"
        ],
        "downvoters": []
      },
      "reactions": {
        "haha": [],
        "wtf": [],
        "tuga": []
      }
    },
    "160969": {
      "poster": "Lovren97",
      "content": "Riješio sam problem. Navodno u std::async iako proslijedim reference se stvore kopije svih argumenata i to sam riješio tako što sam omotao sve argumente sa std::cref(). Nisam stoposto siguran zas to radi, ali koliko sam skuzio to je zato sto sada zapravo samo saljem pointer na te podatke. Ispravite me ako sam u krivu :) Puno hvala svima na pomoći!",
      "votes": {
        "upvoters": [
          "InCogNiTo124",
          "Svarog (Veles)",
          "[deleted]",
          "aperture",
          "jadzia-dax (Jadzia Dax)",
          "kix7 (Fish99)"
        ],
        "downvoters": []
      },
      "reactions": {
        "haha": [
          "janeromero (Serial Number Q5U4EX7YY2E9N)"
        ],
        "wtf": [],
        "tuga": []
      }
    }
  }
}